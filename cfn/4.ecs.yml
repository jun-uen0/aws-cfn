AWSTemplateFormatVersion: 2010-09-09
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: CloudFormation Setting
      Parameters:
      - Prefix
      - Env
    - Label:
        default: Network Setting
      Parameters:
      - Vpc
      - Subnet1a
      - Subnet1c
      - Subnet1d
    - Label:
        default: Load Balancer Setting
      Parameters:
      - NlbArn
      - AcmCertificateArn
      - Eip1a
      - Eip1c
      - Eip1d
    - Label:
        default: ECS Setting
      Parameters:
      - FargateCpu
      - FargateMem
      - TaskRoleArn
Parameters:
  Prefix:
    Type: String
  Env:
    Type: String
    AllowedValues:
    - dev
    - qa
    - prod
  Vpc:
    Type: AWS::EC2::VPC::Id
    Description: Select {prefix}-vpc
  Subnet1a:
    Type: AWS::EC2::Subnet::Id
    Description: Select {prefix}-subnet-1a
  Subnet1c:
    Type: AWS::EC2::Subnet::Id
    Description: Select {prefix}-subnet-1c
  Subnet1d:
    Type: AWS::EC2::Subnet::Id
    Description: Select {prefix}-subnet-1d
  NlbArn:
    Type: String
    Default: Ex.) arn:aws:elasticloadbalancing:<Region>:<Account ID>:loadbalancer/net/{prefix}-nlb-{env}/xxxxxxxxx
    Description: Enter NLB ARN
  AcmCertificateArn:
    Type: String
    Default: Ex.) arn:aws:acm:<Region>:xxxxxxxxx:certificate/xxxxxxxxx
    Description: Enter ACM Certificate ARN
  Eip1a:
    Type: String
    Default: Ex.) eipalloc-xxxxxxxxx
    Description: Enter Allocation ID of an Elastic IP Address
  Eip1c:
    Type: String
    Default: Ex.) eipalloc-xxxxxxxxx
    Description: Enter Allocation ID of an Elastic IP Address
  Eip1d:
    Type: String
    Default: Ex.) eipalloc-xxxxxxxxx
    Description: Enter Allocation ID of an Elastic IP Address
  FargateCpu:
    Type: Number
    Default: 512
  FargateMem:
    Type: Number
    Default: 1024
  TaskRoleArn:
    Type: String
    Default: arn:aws:iam::<Account ID>:role/{prefix}-role-ecs-{dev}
    Description: Enter Role Arn
Transform:
  - AWS::CodeDeployBlueGreen
Hooks:
  CodeDeployBlueGreenHook:
    Properties:
      Applications:
      - Target:
          Type: AWS::ECS::Service
          LogicalID: EcsService
        ECSAttributes:
          TaskDefinitions:
          - TaskDefBlue
          - TaskDefGreen
          TaskSets:
          - TaskSetBlue
          - TaskSetGreen
          TrafficRouting:
            ProdTrafficRoute:
              Type: AWS::ElasticLoadBalancingV2::Listener
              LogicalID: ListenerHttps
            TargetGroups:
            - TgAlbBlue
            - TgAlbGreen
    Type: AWS::CodeDeploy::BlueGreen
Resources:
  # ------------------------------------------------------------#
  # SG
  # ------------------------------------------------------------#
  SgAlb:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for ALB
      VpcId: !Ref Vpc
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: # If you want to set the specific port for ECS, please set the FromPort and ToPort.
        ToPort:   # Same as FromPort.
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        CidrIp: 0.0.0.0/0
  SgEcs:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for ECS
      VpcId: !Ref Vpc
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: # If you want to set the specific port for ECS, please set the FromPort and ToPort.
        ToPort:   # Same as FromPort.
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        CidrIp: 0.0.0.0/0
  # ------------------------------------------------------------#
  # ALB
  # ------------------------------------------------------------#
  AlbEcs:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${Prefix}-alb-${Env}
      Scheme: internal
      SecurityGroups:
      - !Ref SgAlb
      Subnets:
      - !Ref Subnet1a
      - !Ref Subnet1c
      - !Ref Subnet1d
      Type: application
      IpAddressType: ipv4
  ListenerHttps:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        ForwardConfig:
          TargetGroups:
          - TargetGroupArn: !Ref TgAlbBlue
            Weight: 1
      LoadBalancerArn: !Ref AlbEcs
      Port: 443
      Protocol: HTTPS
      Certificates:
      - CertificateArn: !Ref AcmCertificateArn
  ListenerPortEcs:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: fixed-response
        FixedResponseConfig:
          StatusCode: 200
      LoadBalancerArn: !Ref AlbEcs
      Port: # If you want to set the specific port for ECS, please set the FromPort and ToPort.
      Protocol: HTTP
  TgAlbBlue:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${Prefix}-tg-alb-blue-${Env}
      HealthCheckIntervalSeconds: 300
      HealthCheckPath: /
      HealthCheckPort: 3000
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 60
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 4
      Matcher:
        HttpCode: 200
      Port: # If you want to set the specific port for ECS, please set the FromPort and ToPort.
      Protocol: HTTP
      Tags:
      - Key: Group
        Value: Example
      TargetType: ip
      VpcId: !Ref Vpc
  TgAlbGreen:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${Prefix}-tg-alb-green-${Env}
      HealthCheckIntervalSeconds: 300
      HealthCheckPath: /
      HealthCheckPort: # If you want to set the specific port for ECS, please set the FromPort and ToPort.
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 60
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 4
      Matcher:
        HttpCode: 200
      Port: # If you want to set the specific port for ECS, please set the FromPort and ToPort.
      Protocol: HTTP
      Tags:
      - Key: Group
        Value: Example
      TargetType: ip
      VpcId: !Ref Vpc
  # ------------------------------------------------------------#
  # NLB
  # ------------------------------------------------------------#
  NlbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref TgNlb
      LoadBalancerArn: !Ref NlbArn
      Port: 443
      Protocol: TCP
  TgNlb:
    DependsOn:
    - ListenerHttps
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${Prefix}-tg-nlb-${Env}
      HealthCheckPath: /
      HealthCheckPort: 3000
      HealthCheckProtocol: HTTP
      Port: 443
      Protocol: TCP
      Targets:
      - Id: !Ref AlbEcs
        Port: 443
      TargetType: alb
      VpcId: !Ref Vpc
  # ------------------------------------------------------------#
  # ECS
  # ------------------------------------------------------------#
  ECSLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '/ecs/logs/${Prefix}-ecs-${Env}'
  RoleEcsTaskExec:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  TaskDefBlue:
    Type: AWS::ECS::TaskDefinition
    Properties:
      TaskRoleArn: !Ref TaskRoleArn
      ExecutionRoleArn: !GetAtt
      - RoleEcsTaskExec
      - Arn
      ContainerDefinitions:
      - Name: !Sub ${Prefix}-ecs-container-${Env}
        # ----------------------------- URI ----------------------------------------------------#
        Image: # Here is the image name. Ex.) docker.io/amazon/amazon-ecs-sample:latest
        # --------------------------------------------------------------------------------------#
        PortMappings:
        - Protocol: tcp
          HostPort: # If you want to set the specific port for ECS, please set the FromPort and ToPort.
          ContainerPort: # If you want to set the specific port for ECS, please set the FromPort and ToPort.
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-region: !Ref AWS::Region
            awslogs-group: !Ref ECSLogGroup
            awslogs-stream-prefix: !Sub ${Prefix}-log-driver-${Env}
      RequiresCompatibilities:
      - FARGATE
      NetworkMode: awsvpc
      # --- Fargate --- #
      Cpu: !Sub ${FargateCpu}
      Memory: !Sub ${FargateMem}
      # --------------- #
      Family: !Sub ${Prefix}-ecs-task-${Env}
  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${Prefix}-ecs-cluster-${Env}
  EcsService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      DeploymentController:
        Type: EXTERNAL
      ServiceName: !Sub ${Prefix}-ecs-service-${Env}
  TaskSetBlue:
    Type: AWS::ECS::TaskSet
    Properties:
      Cluster: !Ref EcsCluster
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsVpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
          - !Ref SgEcs
          Subnets:
          - !Ref Subnet1a
          - !Ref Subnet1d
      PlatformVersion: 1.4.0
      Scale:
        Unit: PERCENT
        Value: 100
      Service: !Ref EcsService
      TaskDefinition: !Ref TaskDefBlue
      LoadBalancers:
      - ContainerName: !Sub ${Prefix}-ecs-container-${Env}
        ContainerPort: # If you want to set the specific port for ECS, please set the FromPort and ToPort.
        TargetGroupArn: !Ref TgAlbBlue
  PrimaryTaskSet:
    Type: AWS::ECS::PrimaryTaskSet
    Properties:
      Cluster: !Ref EcsCluster
      Service: !Ref EcsService
      TaskSetId: !GetAtt
      - TaskSetBlue
      - Id

