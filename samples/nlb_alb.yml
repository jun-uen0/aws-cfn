# Ref：https://zenn.dev/x_color/articles/elb-connection

AWSTemplateFormatVersion: '2010-09-09'

Description: This template is for ELB connection test.
  It deploys internal Application Load Balancer and internet facing Network Load Balancer.

Parameters:
  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>

  PrivateSubnets:
    Type: List<AWS::EC2::Subnet::Id>

  VPC:
    Type: AWS::EC2::VPC::Id

  NLBCidr:
    Type: String

Resources:
  InternalALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internal
      SecurityGroups:
        - !Ref SecurityGroupForInternalALB
      Subnets: !Ref PrivateSubnets
      Type: application

  InternalALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            StatusCode: '403'
            ContentType: application/json
            MessageBody: '{"message":"NG"}'
      LoadBalancerArn: !Ref InternalALB
      Port: 80
      Protocol: HTTP

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: fixed-response
          FixedResponseConfig:
            StatusCode: '200'
            ContentType: application/json
            MessageBody: '{"message":"OK"}'
      Conditions:
        - Field: source-ip
          SourceIpConfig:
            Values:
              - !Ref NLBCidr
      ListenerArn: !Ref InternalALBListener
      Priority: 1

  SecurityGroupForInternalALB:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: It is for internal ALB
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - CidrIp: !Ref NLBCidr # NLBが存在するサブネットのCidr
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 80
          ToPort: 80

  InternetNLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets: !Ref PublicSubnets
      Type: network

  InternetNLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref InternetNLBTargetToALB
      LoadBalancerArn: !Ref InternetNLB
      Port: 80
      Protocol: TCP

  InternetNLBTargetToALB:
    DependsOn:
      - InternalALBListener
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckProtocol: HTTP # The supported value is 'HTTP' or 'HTTPS' if the target type is ALB
      Port: 80
      Protocol: TCP
      Targets:
        - Id: !Ref InternalALB
          Port: 80
      TargetType: alb
      VpcId: !Ref VPC